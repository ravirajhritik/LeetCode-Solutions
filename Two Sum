https://leetcode.com/problems/two-sum/

class Solution {
public:
    unordered_map<int, int> mp;

    vector<int> twoSum(vector<int>& nums, int target) {
         vector<int> res;
        for (int i = 0; i < nums.size(); i++)
        {
            if (mp.find(nums[i]) != mp.end())
            {
                res.push_back(mp.find(nums[i])->second);
                res.push_back(i);
                break;
            }
            mp[target - nums[i]] = i;
        }
        return res;
    }
};




class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>ans;
        vector<int>arr;
        arr=nums;
        sort(arr.begin(),arr.end());
        int i=0;
        int j=arr.size()-1;
        int m,n;
        while(i<j){
            int sum=arr[i]+arr[j];
            if(sum < target){
                i++;
            }
            else if(sum > target){
                j--;
            }
            else{
                m=arr[i];
                n=arr[j];
                break;
            }
        }
        for(int i=0;i<nums.size();i++){
            if(nums[i]==m)ans.push_back(i);
            else if(nums[i]==n)ans.push_back(i);
        }
        return ans;
    }
};
